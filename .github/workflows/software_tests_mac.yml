## updated from Snakemake's test suite
##
## https://raw.githubusercontent.com/snakemake/snakemake/main/.github/workflows/main.yml
## Derivative of (c) 2012-2022 Johannes KÃ¶ster johannes.koester@uni-due.com
## From Koester's license above:
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
## INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
## PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
## FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
## OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.
##
## and from easybuilders/easybuild-easyconfigs test suite
##
## Derivative work from Kenneth Hoste and colleagues
## https://github.com/easybuilders/easybuild-easyconfigs/blob/develop/.github/workflows/unit_tests.yml
## GPLv2
## License available at https://github.com/easybuilders/easybuild-easyconfigs/blob/develop/LICENSE

name: software

on:
  push:
    branches:
      - sw_imallona
  pull_request:

concurrency:
  group: ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  software_testing:
    strategy:
      matrix:
        os: [macos-14, macos-13]
        test_group: [1, 2]
        py_ver: ["3.12"]
      fail-fast: false
      
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Homebrew
        id: set-up-homebrew
        uses: Homebrew/actions/setup-homebrew@master
        if: matrix.os == 'macos-14' || matrix.os == 'macos-13'
        
      - name: Install Lmod using homebrew
        shell: bash -el {0}
        run: |
             brew upgrade
             brew install coreutils
             brew install gcc
             brew install python
             brew install git
             brew install git-lfs
             brew install lmod             
             brew install wget
             brew install bash
             brew untap homebrew/cask
             brew untap homebrew/core
             brew reinstall openssl@3
             brew reinstall ruby@3.0
             brew reinstall packer
             brew install curl
             brew reinstall cmake
             if [ -f /usr/local/opt/lmod/init/profile ]; then
                source /usr/local/opt/lmod/init/profile
             fi
             if [ -f /opt/homebrew/opt/lmod/init/profile ]; then
                source /opt/homebrew/opt/lmod/init/profile
             fi
             module --version
        if: matrix.os == 'macos-14' || matrix.os == 'macos-13'

      - name: Modify python version in test env
        shell: bash -el {0}
        run: |
          cp test-environment.yml test-environment-${{ matrix.py_ver }}.yml
          sed -E 's/- conda-forge::python.+/- conda-forge::python =${{ matrix.py_ver }}/' test-environment-${{ matrix.py_ver }}.yml > tmp.yml
          mv tmp.yml test-environment-${{ matrix.py_ver }}.yml
          
      - name: Remove lmod installation via conda for Mac (done via brew)
        shell: bash -el {0}
        run: |
           sed -E 's/- conda-forge::lmod.+//' test-environment-${{ matrix.py_ver }}.yml > tmp.yml
           mv tmp.yml test-environment-${{ matrix.py_ver }}.yml
           
      - name: Setup omnibenchmark environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: test-environment-${{ matrix.py_ver }}.yml
          environment-name: omb
          cache-environment: true

      - name: Extra OS / apt (apptainer)
        run: |
           brew install qemu lima
          
      - name: Test
        ## env:
        ##   CI: true
        env:
          CI: false
        shell: bash -el {0}
        run: |

          if [ -f /usr/local/opt/lmod/init/profile ]; then
                source /usr/local/opt/lmod/init/profile
          fi
          if [ -f /opt/homebrew/opt/lmod/init/profile ]; then
                source /opt/homebrew/opt/lmod/init/profile
          fi
          cd tests/software

          module use "$HOME"/.local/easybuild/modules/all

          export
          
          pytest -v -x --show-capture=stderr \
              conda_tests.py envmodules_tests.py

          pytest -v -x --show-capture=stderr \
              cli_tests.py singularity_tests.py  